#!/bin/bash

set -euo pipefail

if [[ $# -lt 3 ]]; then
cat << _HELP_
Usage: $0 [imagefile] [size] [tree/tar]...

Example: $0 sdcard.image 4G fs/ data.tar.gz
_HELP_
fi

image="${1}"
size="${2}"
shift
shift

echo
echo ":: >> >> >> >> >> >> >> >> >> >> >> >>"
echo ":: >> Create tinkerboard sdcard image"

echo ":: Create ${size} image ${image}"
rm -f "${image}" || :
qemu-img create -f raw "${image}" "${size}"
zcat tinkerboard.boot.gz | dd if=/dev/stdin of="${image}" conv=nocreat,notrunc

echo ":: Partition ${image}"
parted --script \
  "${image}" \
  mklabel msdos \
  mkpart primary ext4 4MiB 100% \
  set 1 boot on

echo ":: Setup block devices"
lodev=$(losetup --show --find "${image}")
kpartx -a "${lodev}"
lop1=/dev/mapper/$(lsblk -J -O ${lodev}| jq -r '.blockdevices[]|.children[]|.name'|grep 'p1$')

echo ":: Format disks"
mke2fs -t ext4 -e panic -L root -m 1 "${lop1}"
tune2fs -c 1 -C 1 -i 1d -o discard,journal_data_ordered "${lop1}"

echo ":: Copying data"
mount "${lop1}" /mnt/
for tree in "$@"; do
  if [[ -d "${tree}" ]]; then
    tar -cSp -C "${tree}" . | tar -xSsp -C /mnt || :
  else
    case ${tree} in
      *.tar)
        cat "${tree}" | tar -xSsp -C /mnt || :
        ;;
      *.tar.gz)
        cat "${tree}" | tar -xzSsp -C /mnt || :
        ;;
      *)
        echo "Unknown source tree file ${tree}"
        ;;
    esac
  fi
done

echo ":: Making the system bootable"
cat >> /mnt/etc/fstab << _FSTAB_
LABEL=root   /     ext4  defaults,noatime,nodiratime,commit=600,errors=panic 1 1
tmpfs        /tmp  tmpfs defaults,nosuid 0 0
_FSTAB_
cat >> /mnt/boot/armbianEnv.txt << _ARMBIAN_ENV_
verbosity=1
fdt_file=rk3288-miniarm.dtb
rootdev=LABEL=root
rootfstype=ext4
usbstoragequirks=0x2537:0x1066:u,0x2537:0x1068:u
_ARMBIAN_ENV_
cat >> /mnt/boot/boot.cmd <<'_BOOT_CMD_'
# DO NOT EDIT THIS FILE
#
# Please edit /boot/armbianEnv.txt to set supported parameters
#

setenv rootdev "/dev/mmcblk0p1"
setenv fdt_file "rk3288-miqi.dtb"
setenv ramdisk_addr_r "0x21000000"
setenv console "ttyS2,115200n8"
setenv verbosity "1"

itest.b ${devnum} == 0 && echo "U-boot loaded from SD"
itest.b ${devnum} == 1 && echo "U-boot loaded from eMMC"

if load ${devtype} ${devnum}:1 ${ramdisk_addr_r} /boot/armbianEnv.txt || load ${devtype} ${devnum}:1 ${ramdisk_addr_r} armbianEnv.txt; then
        env import -t ${ramdisk_addr_r} ${filesize}
fi

setenv bootargs "consoleblank=0 scandelay root=${rootdev} rw console=${console} rootfstype=ext4 loglevel=${verbosity} rootwait usb-storage.quirks=${usbstoragequirks} ${extraargs}"
ext4load ${devtype} ${devnum}:1 ${fdt_addr_r} /boot/dtb/${fdt_file} || fatload ${devtype} ${devnum}:1 ${fdt_addr_r} dtb/${fdt_file} || ext4load ${devtype} ${devnum}:1 ${fdt_addr_r} dtb/${fdt_file}
ext4load ${devtype} ${devnum}:1 ${ramdisk_addr_r} /boot/uInitrd || fatload ${devtype} ${devnum}:1 ${ramdisk_addr_r} uInitrd || ext4load ${devtype} ${devnum}:1 ${ramdisk_addr_r} uInitrd
ext4load ${devtype} ${devnum}:1 ${kernel_addr_r} /boot/zImage || fatload ${devtype} ${devnum}:1 ${kernel_addr_r} zImage || ext4load ${devtype} ${devnum}:1 ${kernel_addr_r} zImage
bootz ${kernel_addr_r} ${ramdisk_addr_r} ${fdt_addr_r}
# mkimage -C none -A arm -T script -d /boot/boot.cmd /boot/boot.scr
_BOOT_CMD_
chroot /mnt mkimage -C none -A arm -T script -d /boot/boot.cmd /boot/boot.scr

echo ":: Cleanup"

umount -fl "${lop1}"  || :
kpartx -d "${lodev}"  || :
losetup -d "${lodev}" || :

echo ":: << Create tinkerboard sdcard image"
echo ":: << << << << << << << << << << << <<"
echo
